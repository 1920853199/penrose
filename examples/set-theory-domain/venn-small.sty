forall Set x {
    x.shape = Circle {
        -- center : (?, ?)
        r : ?
        -- r : 100.0
        strokeWidth : 0.0
    }

    x.text = Text {
        string : x.label
    }

    c = 20.0

    x.debugShape = Arrow {
        start: x.text.center
        end: (x.text.center[0] + c * derivative(x.text.center[0]), x.text.center[1] + c * derivative(x.text.center[1]))
        color: rgba(1.0, 0.0, 0.0, 0.5)
        arrowheadSize: 0.5
        thickness: 3.0
        style: "dashed"
    }

    d = 20.0

    x.debugShape2 = Arrow {
        start: x.text.center
        end: (x.text.center[0] + c * derivativePreconditioned(x.text.center[0]), x.text.center[1] + c * derivativePreconditioned(x.text.center[1]))
        color: rgba(0.0, 0.0, 1.0, 0.5)
        arrowheadSize: 0.5
        thickness: 3.0
        style: "dashed"
    }

    -- COMBAK: This doesn't work now
    x.containFn = ensure contains(x.shape, x.text) -- NEW
    -- ensure contains(x.shape, x.text) -- NEW
    encourage sameCenter(x.text, x.shape) -- OLD

    ensure minSize(x.shape)
    ensure maxSize(x.shape)

    layer x.text above x.shape
}

forall Set x; Set y
where IsSubset(x, y) {
    ensure smallerThan(x.shape, y.shape)
    ensure outsideOf(y.text, x.shape)

    ensure contains(y.shape, x.shape, 5.0) -- NEW
    layer x.shape above y.shape
}

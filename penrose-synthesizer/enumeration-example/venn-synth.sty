Colors {
    Colors.darkpurple = rgba(0.549,0.565,0.757, 0.2)
    Colors.black = rgba(0.0, 0.0, 0.0, 1.0)
}

Set x {
    x.shape = Circle {
        strokeWidth : 0.5
        strokeColor : Colors.black
        color: Colors.darkpurple
    }

    x.text = Text {
        string : x.label
        fontSize: "20pt"
    }

    x.labelFn = ensure contains(x.shape, x.text)
    x.minSizeFn = ensure minSize(x.shape)
    x.maxSizeFn = ensure maxSize(x.shape)
    x.layering  = x.shape below x.text
}


Set x; Set y
where IsSubset(x, y) {
    x.containFn = ensure contains(y.shape, x.shape, 5.0)
    x.sizeFn    = ensure smallerThan(x.shape, y.shape)
    y.outsideFn = ensure outsideOf(y.text, x.shape)
}


Set x; Set y
where IsSubset(x, y); IsSubset(y, x); {
    delete x.containFn 
    delete x.sizeFn    
    delete x.outsideFn 

    y.text = Text {
        string: concat(x.label, "=", y.label)
    }

    y.labelFn = ensure contains(y.shape, y.text)
    y.centerFn = encourage sameCenter(x.shape, y.shape)
    y.eqFn = encourage equal(x.shape.r, y.shape.r)
    -- y.layering = y.shape below y.text

    delete x.text
    delete x.labelFn
    delete x.layering
    delete x.centerFn 
    delete x.eqFn 
}

Set x; Set y; Set z
where IsSubset(x, y); IsSubset(y, x); IsSubset(x, z) {
    z.containFn = ensure contains(z.shape, x.shape, 5.0)
    -- z.outsideFn = ensure outsideOf(z.text, x.shape)
}

Set x; Set y; Set z
where IsSubset(x, z); IsSubset(y, z); IsSubset(z, y); IsSubset(z, x) {
    delete x.text
    delete x.labelFn
    delete x.layering
    delete y.text
    delete y.labelFn
    delete y.layering
    delete z.containFn
    delete x.containFn
    delete y.containFn

    z.text = Text {
        string: concat(x.label, "=", y.label, "=", z.label)
    }
    z.labelFn = ensure contains(z.shape, z.text)
    z.centerFn = encourage sameCenter(x.shape, y.shape)
    z.centerFn2 = encourage sameCenter(x.shape, z.shape)
    z.eqFn = encourage equal(x.shape.r, y.shape.r)
    z.eqFn2 = encourage equal(z.shape.r, y.shape.r)
}

Set x; Set y; Set z
where IsSubset(x, y); IsSubset(y, z); IsSubset(z, x) {
    delete x.text
    delete x.labelFn
    delete x.layering
    delete y.text
    delete y.labelFn
    delete y.layering
    delete z.containFn
    delete x.containFn
    delete y.containFn

    z.text = Text {
        string: concat(x.label, "=", y.label, "=", z.label)
    }
    z.centerFn = encourage sameCenter(x.shape, y.shape)
    z.centerFn2 = encourage sameCenter(x.shape, z.shape)
    z.eqFn = encourage equal(x.shape.r, y.shape.r)
    z.eqFn2 = encourage equal(z.shape.r, y.shape.r)
}

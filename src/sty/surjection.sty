global {
    objective toLeft(A, B)
    objective sameHeight(A, B)
    objective sameX(A, B)
    constraint sameSizeAs(A, B)
}

Set s {
    shape = Ellipse { }
    -- constraint contains(s, s.label)
    constraint outsideOf(s.label, s)
    objective above(s, s.label)
    objective sameX(s, s.label)
}

Value f p q {
    shape = Arrow {
        start = p
        end   = q
        text = None
        test = p
    }
}


Point p {
    shape = Dot {
        text = None
    }
}

In p s {
    constraint contains(s, p)
    objective sameX(p, s)
    objective sameHeight(p, s)
}

In p S, In q S {
    objective sameX(p, q)
    objective repel(p, q)
}

Set x {
    x.shape = Circle {
        stroke-width = 0
    }
    x.text = Text { string = x.label }
    x.labelFn = ensure contains(x.shape, x.text)
}

Set x; Set y
where IsSubset(x, y) {
    y.containFn = ensure contains(y.shape, x.shape)
    -- y.sizeFn    = ensure smallerThan(x.shape, y.shape)
    -- y.outsideFn = ensure outsideOf(y.text, x.shape)
}

/*
Intersect x y {
    constraint overlapping(x, y)
    constraint outsideOf(y.shape.label, x)
    constraint outsideOf(x.shape.label, y)
}

NonIntersect x y {
    constraint nonOverlapping(x, y)
}


NoSubset x y {
    objective repel(x, y)
    constraint outsideOf(x, y)
    constraint outsideOf(y.shape.label, x)
    constraint outsideOf(x.shape.label, y)
    constraint nonOverlapping(x, y)
}

*/

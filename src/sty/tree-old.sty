-- Global blocks can be omitted when not needed
Set {
    -- "None" is predefined, the renderer skips Nones
    shape = None
    -- Referring to a "Subset" constraint, which takes 2 arguments
    Subset A, B:
        -- Binding an arrow to an id, which is visible globally
        arr =  Arrow {
            start   = A.shape
            end     = B.shape
            -- "near" is a function built into Arrow objects, adding a constraint to the system by calling "near(A.shape, start)" and "near(B.shape, near)"
            spacing = near
        }
        -- A keyword "show" that signals the renderer
        show arr
}
constraints {
    forall Subset A, B {
        repel(A, B)
    }
    -- we can also specify constraints on the arrow here, using its id:
    -- near(A.shape, arr.start)
    -- near(B.shape, arr.end)
}

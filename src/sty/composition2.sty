global {
    objective toLeft(A, B)
    objective toLeft(B, C)
    /*
    objective sameHeight(A, B)
    objective sameHeight(B, C)
    objective sameX(A, B)
    objective sameX(B, C)
    constraint sameSizeAs(A, B)
    constraint sameSizeAs(B, C)
    objective sameHeight(f, g)
    */
}

Map g x y, Map f p q {
    objective sameHeight(f, g)
}

Set X, Set Y {
    objective sameHeight(X, Y)
    constraint sameSizeAs(X, Y)
}

Set s {
    shape = Ellipse { }
    constraint outsideOf(s.label, s)
    objective onTop(s, s.label)
    objective sameX(s, s.label)
    objective center(s)
}

Map f x y {
    shape = Text { }
    objective between(f, x, y)
    objective onTop(f, x)
}

Value f p q {
    shape = Arrow {
        start = p
        end   = q
        label = None
    }
}

Point p {
    shape = Dot { }
    objective centerLabel(p, p.label)
}

In p s {
    constraint contains(s, p)
    objective sameX(p, s)
    objective sameHeight(p, s)
}

In p S, In q S {
    objective repel(p, q)
    objective sameX(p, q)
}

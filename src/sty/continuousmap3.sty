/*
 * This is the same continuous map program, written in the new syntax.
 */


Set x {
    shape = Circle { }
    constraint contains(x, x.label)
    -- objective centerLabel(x, x.label)
}

NoIntersect x y {
    constraint nonOverlapping(x, y)
}

Subset x y {
    constraint contains(y, x)
    constraint outsideOf(y.label, x)
}

Map f x y {
    shape = Arrow {
        start = x.shape
        end   = y.shape
        label = Auto
    }
    objective centerLabel(f, f.label)
    objective toLeft(x, y)
    objective sameHeight(x, y)
    objective repel(f, R2.label)
    objective repel(f, R1.label)
    objective repel(f, U)
    objective repel(f, V)
    constraint outsideOf(f.label, R1)
    constraint outsideOf(f.label, R2)
}

Set `R1` {
    shape = Box { }
    objective sameHeight(R1, R2)
    constraint sameSizeAs(R1, R2)
}

Set `R2` {
    shape = Box { }
}

Set `U` {
    constraint sameSizeAs(U, V)
    -- constraint sameSizeAs(U, A)
    constraint sameSizeAs(A, B)
}


Set x, Set y {
    -- objective repel(x, y)
    -- objective repel(x.label, y.label)
    -- objective repel(y.label, x)
    -- objective repel(x.label, y)
}



global {
       global.half_pi = 1.57
       global.pi = 3.14
       global.two_pi = 6.28
}

Set x {
    x.shape = RectangleTransform {
        strokeWidth = 0
	-- x = OPTIMIZED
	-- y = OPTIMIZED
	-- width = OPTIMIZED
	-- height = OPTIMIZED
	-- rotation = OPTIMIZED

	transform = rotate(0.2)
	-- TODO: make sure this starts in the origin of screen space?

	-- transform = translate(0.0, 300.0)
	-- andThen(andThen(rotate(20.0), translate(3.0, 5.0)), scaleX(10.0))
    }

    -- Note: rotations are only applied in frontend, so we don't optimize WRT them yet.

    x.text = Text {
      string = x.label
    }

    -- x.labelFn = ensure contains(x.shape, x.text)
    -- x.minSizeFn = ensure minSize(x.shape)
    -- x.maxSizeFn = ensure maxSize(x.shape)
    -- x.labelPosFn = encourage sameCenter(x.text, x.shape)
    LOCAL.layering  = x.shape below x.text
}

Set x; Set y
where IsSubset(x, y) {
    -- LOCAL.containFn = ensure contains(y.shape, x.shape)
    -- LOCAL.sizeFn    = ensure smallerThan(x.shape, y.shape)
    -- LOCAL.outsideFn = ensure outsideOf(y.text, x.shape)
    LOCAL.layering  = x.shape above y.shape
    LOCAL.layering1  = y.text below x.shape
}

Set x; Set y
where NotIntersecting(x, y) {
    LOCAL.notIntersectFn = ensure disjoint(x.shape, y.shape)
}

Set x; Set y
where Intersect(x, y) {
    -- LOCAL.overlapFn = ensure overlapping(x.shape, y.shape)
    -- LOCAL.labelFn1  = ensure outsideOf(y.text, x.shape)
    -- LOCAL.labelFn2  = ensure outsideOf(x.text, y.shape)
}

Point p {
      p.offset = 10.0
      p.shape = Circle {
      	      strokeWidth = 0
	      color = rgba(0.0, 0.0, 0.0, 1.0)
	      r = 3.0
      }

      p.text = Text {
	string = p.label
	x = p.shape.x + p.offset
	y = p.shape.y + p.offset
      }
}

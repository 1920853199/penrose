global {
    constraint at(origin, 0, 0)
    constraint at(horiz, 300, 0)
    constraint at(vert, 0, 200)
}

Point p {
      shape = Dot {
            label = None
      }
}

Set `domainOuter` {
    shape = Arrow {
          start = origin
          end = horiz
          label = x
    }

    objective centerLabel(domainOuter, domainOuter.label)
}

Set `codomain` {
    shape = Arrow {
          start = origin
          end = vert
          label = fx
    }

    objective centerLabel(codomain, codomain.label)
}

Map f domain image {
    shape = Curve {
          path = computeSurjectionLines(5, domain, image)
          label = Auto
    }

    objective centerLabel(f, f.label)
}

-- Set `domainOuter`, Set `codomain` {
Set `cartesianProduct` {
  shape = Rect {
    label = None
    -- side = 20
  }
}

Set `domain` {
       shape = Curve {
             style = dashed
             path = lineLeft(0.2, domainOuter, codomain)
             label = A0
       }

       shape2 = Curve {
              style = dashed
              path = lineLeft(0.8, domainOuter, codomain)
              label = A1
       }

       -- TODO deal with these dot accesses; also, is shape a keyword?
       -- here, 'domain' should be in scope, so we should only have to type shape
       -- TODO how to compute a label position?
       -- objective nearEnd(domain.shape, domain.shape.label)
       -- objective nearEnd(domain.shape2, domain.shape.label)
}

Set `image` {
       shape = Curve {
             style = dashed
             path = lineRight(0.2, codomain, domainOuter)
             label = B0
       }

       shape2 = Curve {
              style = dashed
              path = lineRight(0.8, codomain, domainOuter)
              label = B1
       }
}
global {
    constraint at(origin, 0, 0)
    constraint at(horiz, 200, 0)
    constraint at(vert, 0, 200)
}

Point p {
      shape = Dot {
            label = Auto
      }
}

Set `domainOuter` {
    shape = Arrow {
          start = origin
          end = horiz
          label = Auto
    }

    objective centerLabel(domainOuter, domainOuter.label)
}

Set `codomain` {
    shape = Arrow {
          start = origin
          end = vert
          label = Auto
    }

    objective centerLabel(codomain, codomain.label)
}

Map f domain image {
    shape = Curve {
          path = computeSurjectionLines(5, domain, image)
          -- path = computeSurjectionBbox(5, domainOuter, codomain)
    }
}

-- Set `domainOuter`, Set `codomain` {
Set `cartesianProduct` {
     shape = Box {}
}

Set `domain` {
       shape = Curve {
             style = dashed
             path = lineLeft(0.2, domainOuter, codomain)
       }

       shape2 = Curve {
              style = dashed
              path = lineLeft(0.8, domainOuter, codomain)
       }
}

Set `image` {
       shape = Curve {
             style = dashed
             path = lineRight(0.2, codomain, domainOuter)
       }

       shape2 = Curve {
              style = dashed
              path = lineRight(0.8, codomain, domainOuter)
       }
}
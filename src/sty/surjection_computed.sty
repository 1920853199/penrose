global {
    constraint at(origin, 0, 0)
    constraint at(horiz, 300, 0)
    constraint at(vert, 0, 200)
}

Point p {
      shape = Dot {
            text = None
      }
}

Set `domainOuter` {
    shape = Arrow {
          start = origin
          end = horiz
          text = "x"
    }

    objective centerLabel(domainOuter, domainOuter.label)
}

Set `codomain` {
    shape = Arrow {
          start = origin
          end = vert
          text = "f(x)"
    }

    objective centerLabel(codomain, codomain.label)
}

Map f domain image {
    shape = Curve {
          path = computeSurjectionLines(5, domain, image)
          text = Auto
    }

    objective centerLabel(f, f.label)
}

-- Set `domainOuter`, Set `codomain` {
Set `cartesianProduct` {
  shape = Rect {
    text = None
    center = regionCenter(domain, image)
    -- this will pass in both of domain's objects
    length = regionX(domain)
    width = regionY(image)
  }
}

Set `domain` {
       shape = Curve {
             style = "dashed"
             path = lineLeft(0.2, domainOuter, codomain)
             text = "A0"
       }

       shape2 = Curve {
              style = "dashed"
              path = lineLeft(0.8, domainOuter, codomain)
              text = "A1"
       }

       -- TODO deal with these dot accesses; also, is shape a keyword?
       -- here, 'domain' should be in scope, so we should only have to type shape
       -- need to check for name clashes/scope between Sub/Sty/Sty blocks
       -- TODO how to compute a label position?
       -- what does 'domain.label' currently do?
       
       -- objective nearEnd(domain.shape, domain.shape.label)
       -- objective nearEnd(domain.shape2, domain.shape.label)

       -- objective nearEnds(domain.shape.label, domain.label)
       objective nearEnds(domain.shape2, domain.label)
}

Set `image` {
       shape = Curve {
             style = "dashed"
             path = lineRight(0.2, codomain, domainOuter)
             text = "B0"
       }

       shape2 = Curve {
              style = "dashed"
              path = lineRight(0.8, codomain, domainOuter)
              text = "B1"
       }
}